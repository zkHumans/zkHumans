// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model log {
  id        Int      @id @default(autoincrement())
  type      String // [info,warn,error]
  message   Json
  createdAt DateTime @default(now())
}

model zkapp {
  address   String   @id // Base58 PublicKey of zkapp
  blockInit BigInt   @default(0) // first block height scanned for events
  blockLast BigInt   @default(0) // last block height scanned for events
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  // relations
  storage storage[]
  events  event[]
}

// An individual unit of key:value store.
//
// It can be a Store and/or data within a Store.
//
// Recursive in nature as it may be an element within another which is itself a
// unit of store whereby:
// - key   = unique identifier as a key within another Store
// - value = commitment (root hash) representing contents
model storage {
  key   String @id
  value String
  meta  Json?

  // pending storage
  isPending          Boolean @default(true)
  commitmentPending  String? // zkApp's root hash this data proved against
  commitmentSettled  String? // zkApp's root hash this data settled within
  settlementChecksum String? // hashed expression of the data for validity

  // relations
  data         storage[] @relation("storage")
  storage      storage?  @relation("storage", fields: [storageKey], references: [key], onDelete: Cascade, onUpdate: Cascade)
  storageKey   String? // undefined only for top-level storage
  events       event[]   @relation("event-storage")
  zkapp        zkapp     @relation(fields: [zkappAddress], references: [address], onDelete: Cascade, onUpdate: Cascade)
  zkappAddress String

  // other
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([key, storageKey])
}

model event {
  id          String   @id
  isProcessed Boolean  @default(false)
  createdAt   DateTime @default(now())

  // from the event
  type            String
  data            Json? // event.data
  transactionInfo Json // event.transactionInfo
  blockHeight     BigInt
  globalSlot      BigInt

  // relations
  storage      storage[] @relation("event-storage")
  zkapp        zkapp?    @relation(fields: [zkappAddress], references: [address], onDelete: Cascade, onUpdate: Cascade)
  zkappAddress String?
}
